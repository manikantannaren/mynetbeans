/*
 * Copyright 2015 Manikantan Narender Nath.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.manikantannaren.nb.archive;

import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import org.openide.util.NbPreferences;
import io.github.manikantannaren.nb.archive.options.ArchiverPreferencesKeys;

/**
 *
 * @author Kaiser
 */
@NbBundle.Messages(
        {
            "add.to.favorites=Add to favorites",
            "dont.ask.again=Don't ask again",
            "dont.ask.again.help=(you can reset the option in options dialog)",
            "# {0} - the file to be shown in the favorites window",
            "addtofavorites.label.text=<html><body><center>Do you want to add the generated archive<br> {0} <br>to the favorites window?</center></body></html>"

        }
)

public class AddToFavoritesConfirmPanel extends javax.swing.JPanel {

    AddToFavoritesConfirmPanel(FileObject destFile) {
        initComponents();
        String msg = FileUtil.getFileDisplayName(destFile);
        msg = Bundle.addtofavorites_label_text(msg);
        messageLabel.setText(msg);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLabel = new javax.swing.JLabel();
        dontAskAgainCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();

        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.openide.awt.Mnemonics.setLocalizedText(messageLabel, org.openide.util.NbBundle.getMessage(AddToFavoritesConfirmPanel.class, "AddToFavoritesConfirmPanel.messageLabel.text")); // NOI18N
        messageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        org.openide.awt.Mnemonics.setLocalizedText(dontAskAgainCheckBox, Bundle.dont_ask_again());

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, Bundle.dont_ask_again_help());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dontAskAgainCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dontAskAgainCheckBox)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dontAskAgainCheckBox, jLabel2});

    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox dontAskAgainCheckBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel messageLabel;
    // End of variables declaration//GEN-END:variables

    void storeChanges() {
        Preferences prefs = NbPreferences.forModule(ArchiverAction.class);
        prefs.putBoolean(ArchiverPreferencesKeys.SHOW_ADD_TO_FAV_DIALOG.name(), !dontAskAgainCheckBox.isSelected());
        try {
            prefs.flush();
        } catch (BackingStoreException ex) {
            Exceptions.printStackTrace(ex);
        }
    }
    
}
